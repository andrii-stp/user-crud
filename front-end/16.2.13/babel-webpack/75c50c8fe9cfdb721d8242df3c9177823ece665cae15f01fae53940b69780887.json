{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = '/api/v1/users';\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n  }\n  getAll() {\n    return this.http.get(this.baseUrl, {\n      headers: this.headers\n    });\n  }\n  add(user) {\n    return this.http.post(this.baseUrl, user, {\n      headers: this.headers\n    });\n  }\n  update(user) {\n    return this.http.put(`${this.baseUrl}/${user.user_id}`, user, {\n      headers: this.headers\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`, {\n      headers: this.headers\n    });\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","UserService","constructor","http","baseUrl","headers","set","getAll","get","add","user","post","update","put","user_id","delete","id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\andre\\go\\src\\github.com\\andrii-stp\\users-crud\\front-end\\src\\app\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {User} from \"./user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl: string = '/api/v1/users';\n  readonly headers = new HttpHeaders()\n    .set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<User[]> {\n    return this.http.get<User[]>(this.baseUrl, {headers: this.headers});\n  }\n\n  add(user: User): Observable<User> {\n    return this.http.post<User>(this.baseUrl, user, {headers: this.headers});\n  }\n\n  update(user: User): Observable<User> {\n    return this.http.put<User>(\n      `${this.baseUrl}/${user.user_id}`, user, {headers: this.headers}\n    );\n  }\n\n  delete(id: number): Observable<User> {\n    return this.http.delete<User>(`${this.baseUrl}/${id}`, {headers: this.headers});\n  }\n}\n"],"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAO5D,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,OAAO,GAAW,eAAe;IACxB,KAAAC,OAAO,GAAG,IAAIL,WAAW,EAAE,CACjCM,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEF;EAExCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,IAAI,CAACJ,OAAO,EAAE;MAACC,OAAO,EAAE,IAAI,CAACA;IAAO,CAAC,CAAC;EACrE;EAEAI,GAAGA,CAACC,IAAU;IACZ,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,IAAI,CAACP,OAAO,EAAEM,IAAI,EAAE;MAACL,OAAO,EAAE,IAAI,CAACA;IAAO,CAAC,CAAC;EAC1E;EAEAO,MAAMA,CAACF,IAAU;IACf,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAClB,GAAG,IAAI,CAACT,OAAO,IAAIM,IAAI,CAACI,OAAO,EAAE,EAAEJ,IAAI,EAAE;MAACL,OAAO,EAAE,IAAI,CAACA;IAAO,CAAC,CACjE;EACH;EAEAU,MAAMA,CAACC,EAAU;IACf,OAAO,IAAI,CAACb,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,OAAO,IAAIY,EAAE,EAAE,EAAE;MAACX,OAAO,EAAE,IAAI,CAACA;IAAO,CAAC,CAAC;EACjF;EAAC,QAAAY,CAAA,G;qBAvBUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}